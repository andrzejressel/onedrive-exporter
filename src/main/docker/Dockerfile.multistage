## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/ubi-quarkus-native-image:22.0-java11 AS build
ARG VERSION=dev
USER root
RUN microdnf install findutils
COPY --chown=quarkus:quarkus build.gradle.kts /code/build.gradle.kts
COPY --chown=quarkus:quarkus settings.gradle.kts /code/settings.gradle.kts
COPY --chown=quarkus:quarkus gradle.properties /code/gradle.properties
COPY --chown=quarkus:quarkus gradlew /code/gradlew
COPY --chown=quarkus:quarkus gradle /code/gradle
COPY --chown=quarkus:quarkus src/main/kotlin /code/src/main/kotlin
COPY --chown=quarkus:quarkus src/main/resources /code/src/main/resources

USER quarkus
WORKDIR /code
RUN chmod +x gradlew
RUN VERSION=$VERSION ./gradlew build -Dquarkus.package.type=native --no-daemon

## Stage 2 : create the docker final image
#FROM quay.io/quarkus/quarkus-micro-image:1.0
FROM registry.access.redhat.com/ubi8/openjdk-11
WORKDIR /data/
WORKDIR /work/
USER root
RUN chmod 775 /data
RUN chown -R jboss:jboss /data
RUN chmod 775 /work
RUN chown -R jboss:jboss /work
USER jboss

RUN curl -o /work/h2.jar -L https://repo1.maven.org/maven2/com/h2database/h2/2.1.210/h2-2.1.210.jar
COPY src/main/docker/run.sh /work/run.sh
COPY --from=build /code/build/*-runner /work/application

EXPOSE 8080

CMD ./run.sh